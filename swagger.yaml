openapi: 3.0.3
info:
  title: Simple Books API
  version: 1.0.0
  contact: {}
servers:
  - url: https://simple-books-api.glitch.me
paths:
  /status:
    get:
      tags:
        - Ping - HealthCheck
      summary: Status
      description: Returns the status of the API.
      operationId: status
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
  /api-clients:
    post:
      tags:
        - API Authentication
      summary: API Authentication
      description: >-
        To submit or view an order, you need to register your API client.
        
        
        The request body needs to be in JSON format.


        The response body will contain the access token. The access token is
        valid for 7 days.
      operationId: apiAuthentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientEmail:
                  type: string
                  example: YourName@example.com
                clientName:
                  type: string
                  example: Postman YourName
            example:
              clientEmail: YourName@example.com
              clientName: Postman YourName
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: >-
                      a6c2833e29d5386f2e11bcbe7b5fcee6047802f7216cdefcc51b0396a70f2208
        '409':
          description: Fail
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: API client already registered. Try a different email.
  /books:
    get:
      tags:
        - Get books info
      summary: List of books
      description: |-
        Returns a list of books.

        Optional query parameters:

        - `type` : fiction or non-fiction
        - `limit` : a number between 1 and 20.
      operationId: listOfBooks
      parameters:
        - name: type
          in: query
          schema:
            type: string
            example: '{{varType}}'
        - name: limit
          in: query
          schema:
            type: string
            example: '{{varLimit}}'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    available:
                      type: boolean
                      example: true
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: The Russian
                    type:
                      type: string
                      example: fiction
                example:
                  - available: true
                    id: 1
                    name: The Russian
                    type: fiction
                  - available: false
                    id: 2
                    name: Just as I Am
                    type: non-fiction
                  - available: true
                    id: 3
                    name: The Vanishing Half
                    type: fiction
                  - available: true

  /books/{bookId}:
    get:
      tags:
        - Get books info
      summary: Get a single book
      description: Retrieve detailed information about a book.
      operationId: getASingleBook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  author:
                    type: string
                    example: Cicely Tyson
                  available:
                    type: boolean
                    example: false
                  current-stock:
                    type: number
                    example: 0
                  id:
                    type: number
                    example: 2
                  name:
                    type: string
                    example: Just as I Am
                  price:
                    type: number
                    example: 20.33
                  type:
                    type: string
                    example: non-fiction
    parameters:
      - name: bookId
        in: path
        required: true
        schema:
          type: string
          example: ''
  /orders:
    get:
      tags:
        - Get orders info
      summary: Get all orders
      description: Allows you to view all orders. Requires authentication.
      operationId: getAllOrders
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bookId:
                      type: number
                      example: 5
                    createdBy:
                      type: string
                      example: >-
                        7d0457ec1c698f2fbd80a7910bb6156fab227ab001d2438e0e6a771cd42e4eec
                    customerName:
                      type: string
                      example: Sheryl Hoeger III
                    id:
                      type: string
                      example: ZepXNRHsLu-4OWYVXXPEO
                    quantity:
                      type: number
                      example: 1
                    timestamp:
                      type: number
                      example: 1689920515902
                example:
                  - bookId: 5
                    createdBy: >-
                      7d0457ec1c698f2fbd80a7910bb6156fab227ab001d2438e0e6a771cd42e4eec
                    customerName: Sheryl Hoeger III
                    id: ZepXNRHsLu-4OWYVXXPEO
                    quantity: 1
                    timestamp: 1689920515902
                  - bookId: 5
                    createdBy: >-
                      7d0457ec1c698f2fbd80a7910bb6156fab227ab001d2438e0e6a771cd42e4eec
                    customerName: Postman YourName
                    id: 0EsWAZrNDwTXBhflACLNB
                    quantity: 1
                    timestamp: 1689920580970
    post:
      tags:
        - Submit an order
      summary: Submit an order books
      description: "Allows you to submit a new order. Requires authentication.\n\nThe request body needs to be in JSON format and include the following properties:\n\n- `bookId`\_- Integer - Required\n- `customerName`\_- String - Required\n    \n\nThe response body will contain the order Id."
      operationId: submitAnOrderBooks
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: number
                  example: 5
                customerName:
                  type: string
                  example: Postman YourName
            example:
              bookId: 5
              customerName: Postman YourName
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: boolean
                    example: true
                  orderId:
                    type: string
                    example: ZepXNRHsLu-4OWYVXXPEO
              examples:
                Success:
                  value:
                    created: true
                    orderId: ZepXNRHsLu-4OWYVXXPEO
  /orders/{orderId}:
    get:
      tags:
        - Get orders info
      summary: Get an order
      description: Allows you to view an existing order. Requires authentication.
      operationId: getAnOrder
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookId:
                    type: number
                    example: 5
                  createdBy:
                    type: string
                    example: >-
                      7d0457ec1c698f2fbd80a7910bb6156fab227ab001d2438e0e6a771cd42e4eec
                  customerName:
                    type: string
                    example: Postman YourName
                  id:
                    type: string
                    example: 0EsWAZrNDwTXBhflACLNB
                  quantity:
                    type: number
                    example: 1
                  timestamp:
                    type: number
                    example: 1689920580970
        '404':
          description: Fail
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No order with id ZcgDwG7HIJcHp34IGtwe-.
    delete:
      tags:
        - Delete an order
      summary: Delete an order
      description: |-
        Delete an existing order. Requires authentication.

        The request body needs to be empty.
      operationId: deleteAnOrder
      responses:
        '204':
          description: Success
          content: {}
        '404':
          description: Fail
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No order with id TVqBfK5uSTBCbm6nHQbB4.

    patch:
      tags:
        - Update an order
      summary: Update an order
      description: "Update an existing order. Requires authentication.\n\nThe request body needs to be in JSON format and allows you to update the following properties:\n\n- `customerName`\_- String"
      operationId: updateAnOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customerName:
                  type: string
                  example: Update Postman YourName
            example:
              customerName: Update Postman YourName
      responses:
        '204':
          description: Success
          content: {}
        '404':
          description: Fail
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No order with id :orderId.
    parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
          example: '{{orderId}}'
tags:
  - name: Ping - HealthCheck
  - name: API Authentication
  - name: Get books info
  - name: Submit an order
  - name: Get orders info
  - name: Update an order
  - name: Delete an order
